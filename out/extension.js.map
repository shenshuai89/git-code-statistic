{"version":3,"sources":["../webpack/bootstrap",".././src/extension.ts","../external \"vscode\"",".././src/gitTools.ts","../external \"child_process\"",".././src/treeData.ts"],"names":[],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {\n  ExtensionContext,\n  commands,\n  window,\n  workspace,\n  ViewColumn,\n  WebviewPanel,\n} from 'vscode';\nimport { GitTools } from './gitTools';\nimport TreeProvider from './treeData';\n\nconst git = new GitTools(workspace.workspaceFolders![0].uri.fsPath);\nexport function activate(context: ExtensionContext) {\n  window.createTreeView('gitcode-userlist', {\n    treeDataProvider: new TreeProvider(),\n  });\n  let disposable = commands.registerCommand(\n    'git-code-statistic.gitcode',\n    async function () {\n      // const git = new GitTools(__dirname);\n      // console.log(workspace.workspaceFolders[0].uri.fsPath, \"pathpath to git\")\n      getSelectedTextOrPrompt('输入作者').then(function (author) {\n        if (!author) {\n          return;\n        } else {\n          searchByDate(author as string);\n          /* getSelectedTextOrPrompt('输入开始时间').then(function (since) {\n            if (!since) {\n              return;\n            } else {\n              getSelectedTextOrPrompt('输入结束时间').then(function (until) {\n                if (!until) {\n                  return;\n                }\n                git\n                  .logMonth({\n                    author: author,\n                    since: since,\n                    until: until,\n                  })\n                  .then((result) => {\n                    console.log(result, 'git-code-statistic.gitcode');\n\n                    // 新创建一个页面，用了存放生成的数据 \n                    const panel = window.createWebviewPanel(\n                      'git-code-statistic', // 只供内部使用，这个 webview 的标识\n                      'git code statistic', // 给用户显示的面板标题\n                      ViewColumn.One, // 给新的 webview 面板一个编辑器视图\n                      {\n                        enableScripts: true, // 启用 javascript 脚本\n                        retainContextWhenHidden: true, // 隐藏时保留上下文\n                      } // webview 面板的内容配置\n                    );\n                    panel.webview.html = (result as string).slice(5);\n                    // 显示提示框\n                    // vscode.window.showInformationMessage(result);\n                  });\n              });\n            }\n          }); */\n        }\n      });\n    }\n  );\n\n  context.subscriptions.push(\n    disposable,\n    commands.registerCommand(`userList.add`, () => {\n      console.log(workspace!.workspaceFolders![0].uri.fsPath, 'add to git');\n    }),\n    commands.registerCommand(`userList.item.remove`, (user) => {\n      let userName = user.label.split(' ')[0];\n      console.log(user, 'remove removeremoveremove');\n      searchByDate(userName);\n    })\n  );\n}\n\n// 追踪当前 webview 面板\nlet currentPanel: WebviewPanel | undefined = undefined;\nfunction searchByDate(userName: string) {\n  getSelectedTextOrPrompt('输入开始时间,如2020-01-31或2020/01/31').then(\n    function (since) {\n      if (!since) {\n        return;\n      } else {\n        getSelectedTextOrPrompt('输入结束时间，如2080-01-31或2080/01/31').then(\n          function (until) {\n            if (!until) {\n              return;\n            }\n            git\n              .logMonth({\n                author: userName,\n                since: since,\n                until: until,\n              })\n              .then((result) => {\n                // 获取当前活动的编辑器\n                const columnToShowIn = window.activeTextEditor\n                  ? window.activeTextEditor.viewColumn\n                  : undefined;\n                if (currentPanel) {\n                  // 如果我们已经有了一个面板，那就把它显示到目标列布局中\n                  // currentPanel.reveal(columnToShowIn);\n                  // 当前面板被关闭后重置\n                  // 先进行销毁\n                  currentPanel!.dispose();\n                  /* 新创建一个页面，用了存放生成的数据 */\n                  currentPanel = window.createWebviewPanel(\n                    'git-code-statistic', // 只供内部使用，这个 webview 的标识\n                    'git code statistic', // 给用户显示的面板标题\n                    ViewColumn.One, // 给新的 webview 面板一个编辑器视图\n                    {\n                      enableScripts: true, // 启用 javascript 脚本\n                      retainContextWhenHidden: true, // 隐藏时保留上下文\n                    } // webview 面板的内容配置\n                  );\n                  currentPanel.webview.html = setPanelHtml(userName, since, until, result);\n                } else {\n                  /* 新创建一个页面，用了存放生成的数据 */\n                  currentPanel = window.createWebviewPanel(\n                    'git-code-statistic', // 只供内部使用，这个 webview 的标识\n                    'git code statistic', // 给用户显示的面板标题\n                    ViewColumn.Active, // 给新的 webview 面板一个编辑器视图\n                    {\n                      enableScripts: true, // 启用 javascript 脚本\n                      retainContextWhenHidden: true, // 隐藏时保留上下文\n                    } // webview 面板的内容配置\n                  );\n                  currentPanel.webview.html = setPanelHtml(userName, since, until, result);\n                }\n              });\n          }\n        );\n      }\n    }\n  );\n}\n\nconst setPanelHtml = (\n  userName: string,\n  since: object,\n  until: object,\n  result: unknown\n) => {\n  return `\n    <html>\n      <body>\n        <h3>git code analysis</h3>\n        <p>The project submitted code line by <b>${userName}</b> from <b>${since}</b> to <b>${until}</b> is as follows</p>\n        <div style='font-size: 18px;'>${(result as string).slice(5)}</div>\n      </body>\n    </html>\n  `;\n};\n\n// 获取当前选中内容 或者 提示用户输入\nfunction getSelectedTextOrPrompt(prompt: string) {\n  return new Promise((resolve, reject) => {\n    const activeTextEditor = window.activeTextEditor;\n    if (activeTextEditor) {\n      const selection = activeTextEditor.selection,\n        start = selection.start,\n        end = selection.end;\n      console.log(activeTextEditor, 'selection');\n      if (start.line !== end.line || start.character !== end.character) {\n        return resolve(activeTextEditor.document.getText(selection));\n      }\n    }\n    return resolve(window.showInputBox({ prompt }));\n  });\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","import { spawn, exec } from 'child_process';\n\nexport class GitTools {\n    private cwd: string;\n    private user: string;\n  constructor(cwd: string) {\n    this.cwd = cwd;\n    this.user = '';\n    this.init();\n  }\n  async init() {\n    this.startChildProcess('git', ['remote', '-v'])\n      .then(async (res) => {\n        this.user = await this.startChildProcess('git', [\n          'config',\n          'user.name',\n        ]);\n        console.log(this.user, 'username');\n      })\n      .catch((err) => {\n        console.error('git no remote', err);\n      });\n  }\n  async remote() {\n    try {\n      var params = ['remote', '-v'];\n      let result = await this.startChildProcess('git', params);\n      return result;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  async logMonth(params:any) {\n    // const res = await this.startChildProcess('echo', ['-e', 'A line1\\nB line 2', '|', 'awk', 'BEGIN{ print \"Start\" } { print } END{ print \"End\" }']);\n    const res = await this.startChildProcessNoParams(\n      `git log --author=\"${params.author}\" --pretty=tformat: --numstat --since=${params.since} --until=${params.until} | awk 'BEGIN{ print \"Start\" } { add += $1; subs += $2; all += $1 + $2 } END{ print \"add line: \"add \" remove line: \"subs \" all line: \"all }'`,\n    );\n    return res;\n  }\n  async testAwk1(params: any) {\n    // const res = await this.startChildProcess('echo', ['-e', 'A line1\\nB line 2', '|', 'awk', 'BEGIN{ print \"Start\" } { print } END{ print \"End\" }']);\n    const res = await this.startChildProcessNoParams(\n      `git log --author=\"${params.author}\" --pretty=tformat: --numstat --since=${params.since} --until=${params.until} | awk 'BEGIN{ print \"Start\" } { add += $1; subs += $2; all += $1 + $2 } END{ print \"add line: \"add \" remove line: \"subs \" all line: all \"all }'`,\n    );\n    return res;\n    // return \"testAwk\";\n    // 测试awk命令的执行\n    // echo -e \"A line 1\\nA line 2\" | awk 'BEGIN{ print \"Start\" } { print } END{ print \"End\" }'\n    // return execPromisify(`echo -e \"A line 1\\nA line 2\" | awk 'BEGIN{ print \"Start\" } { print } END{ print \"End\" }'`, { cwd: this.cwd });\n  }\n  async branch() {\n    try {\n      var params = ['branch', '-a'];\n      let result = await this.startChildProcess('git', params);\n      return result.toString();\n    } catch (err) {\n      console.error(err);\n    }\n\n    return false;\n  }\n  async allUser() {\n    // git log --pretty=format:\"%an <%ae>\"| sort -u\n    try {\n      const res = await this.startChildProcessNoParams(\n        `git log --pretty=format:\"%an <%ae>\"| sort -u`,\n      );\n      return res;\n    } catch (err) {\n      console.error(err);\n    }\n    return false;\n  }\n\n  async status() {\n    try {\n      var params = ['status', '-s'];\n      let result = await this.startChildProcess('git', params);\n      return result;\n    } catch (err) {\n      console.error(err);\n    }\n\n    return false;\n  }\n  startChildProcess(command: string, params: string[]): Promise<string> {\n    return new Promise((resolve, reject) => {\n      var process = spawn(command, params, {\n        cwd: this.cwd,\n        shell: true,\n      });\n\n      var logMessage = `${command} ${params[0]}`;\n      var cmdMessage = '';\n\n      process.stdout.on('data', (data) => {\n        console.log(`${logMessage} start ---`, data);\n        if (!data) {\n          reject(`${logMessage} error1 : ${data}`);\n        } else {\n          cmdMessage = data.toString();\n        }\n      });\n\n      process.on('close', (data) => {\n        console.log(`${logMessage} close ---`, data);\n        if (data) {\n          reject(`${logMessage} error2 ! ${data}`);\n        } else {\n          console.log(`${logMessage} success !`);\n          resolve(cmdMessage);\n        }\n      });\n    });\n  }\n  startChildProcessNoParams(command:string) {\n    return new Promise((resolve, reject) => {\n      var process = spawn(command, {\n        cwd: this.cwd,\n        shell: true,\n      });\n\n      var logMessage = `${command}`;\n      var cmdMessage = '';\n\n      process.stdout.on('data', (data) => {\n        console.log(`${logMessage} start ---`, data);\n        if (!data) {\n          reject(`${logMessage} error1 : ${data}`);\n        } else {\n          cmdMessage = data.toString();\n        }\n      });\n\n      process.on('close', (data) => {\n        console.log(`${logMessage} close ---`, data);\n        if (data) {\n          reject(`${logMessage} error2 ! ${data}`);\n        } else {\n          console.log(`${logMessage} success !`);\n          resolve(cmdMessage);\n        }\n      });\n    });\n  }\n}","module.exports = require(\"child_process\");","import * as vscode from 'vscode';\nimport { GitTools } from './gitTools';\n\n// 创建一个类 TreeProvider，实现了 TreeDataProvider 接口\nexport default class TreeProvider\n  implements vscode.TreeDataProvider<vscode.TreeItem>\n{\n  // 创建一个事件发射器，用于通知树数据发生变化\n  private _onDidChangeTreeData: vscode.EventEmitter<\n    vscode.TreeItem | undefined\n  > = new vscode.EventEmitter<vscode.TreeItem | undefined>();\n  // 定义一个只读的事件，允许外部订阅树数据变化事件\n  readonly onDidChangeTreeData: vscode.Event<vscode.TreeItem | undefined> =\n    this._onDidChangeTreeData.event;\n\n  // 定义刷新方法，用于通知视图数据发生变化\n  refresh(): void {\n    this._onDidChangeTreeData.fire(undefined);\n  }\n\n  // 获取树中的单个项目，这里可以定义如何显示单个项目\n  getTreeItem(element: vscode.TreeItem): vscode.TreeItem {\n    return element;\n  }\n\n  // 获取树的子元素，可以是一个异步操作\n  getChildren(element?: vscode.TreeItem): Promise<vscode.TreeItem[]> {\n    // 在这里实现获取树的子元素的逻辑\n    // 可以返回一个 Promise 来异步获取子元素\n    // 如果没有子元素，可以返回一个空数组\n    // 在实际使用中，你需要根据你的插件逻辑来实现这个方法\n    return new Promise(async (resolve, reject) => {\n      const gitTool = new GitTools(vscode.workspace.workspaceFolders![0].uri.fsPath);\n      const userList: string = await gitTool.allUser() as string;\n      const result = userList.split(\"\\n\").filter(Boolean).map((item: string) => {\n        return new vscode.TreeItem(item, vscode.TreeItemCollapsibleState.None)\n      });\n      resolve(result)\n      // if (!element) {\n      //   resolve([\n      //     new vscode.TreeItem(\n      //       'Hello World!',\n      //       vscode.TreeItemCollapsibleState.Expanded\n      //     ),\n      //   ]);\n      // } else {\n      //   resolve([\n      //     new vscode.TreeItem(\n      //       'happy coding',\n      //       vscode.TreeItemCollapsibleState.None\n      //     ),\n      //   ]);\n      // }\n    });\n  }\n}\n"],"sourceRoot":""}
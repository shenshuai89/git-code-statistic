{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"",".././src/gitTools.ts",".././src/extension.ts","../external \"child_process\"",".././src/treeData.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","cwd","this","user","init","startChildProcess","then","res","console","log","catch","err","error","params","startChildProcessNoParams","author","since","until","toString","command","Promise","resolve","reject","process","spawn","shell","logMessage","cmdMessage","stdout","on","data","git","GitTools","workspace","workspaceFolders","uri","fsPath","searchByDate","userName","getSelectedTextOrPrompt","logMonth","result","window","createWebviewPanel","ViewColumn","One","enableScripts","retainContextWhenHidden","webview","html","slice","prompt","activeTextEditor","selection","start","end","line","character","document","getText","showInputBox","context","createTreeView","treeDataProvider","disposable","commands","registerCommand","subscriptions","push","label","split","_onDidChangeTreeData","vscode","EventEmitter","onDidChangeTreeData","event","fire","undefined","element","gitTool","allUser","filter","Boolean","map","item","TreeItem","TreeItemCollapsibleState","None"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"vscode\");","import { spawn, exec } from 'child_process';\n\nexport class GitTools {\n    private cwd: string;\n    private user: string;\n  constructor(cwd: string) {\n    this.cwd = cwd;\n    this.user = '';\n    this.init();\n  }\n  async init() {\n    this.startChildProcess('git', ['remote', '-v'])\n      .then(async (res) => {\n        this.user = await this.startChildProcess('git', [\n          'config',\n          'user.name',\n        ]);\n        console.log(this.user, 'username');\n      })\n      .catch((err) => {\n        console.error('git no remote', err);\n      });\n  }\n  async remote() {\n    try {\n      var params = ['remote', '-v'];\n      let result = await this.startChildProcess('git', params);\n      return result;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  async logMonth(params:any) {\n    // const res = await this.startChildProcess('echo', ['-e', 'A line1\\nB line 2', '|', 'awk', 'BEGIN{ print \"Start\" } { print } END{ print \"End\" }']);\n    const res = await this.startChildProcessNoParams(\n      `git log --author=\"${params.author}\" --pretty=tformat: --numstat --since=${params.since} --until=${params.until} | awk 'BEGIN{ print \"Start\" } { add += $1; subs += $2; all += $1 + $2 } END{ print \"添加行: add \"add \" 移除行: remove \"subs \" 总计行: all \"all }'`,\n    );\n    return res;\n  }\n  async testAwk1(params: any) {\n    // const res = await this.startChildProcess('echo', ['-e', 'A line1\\nB line 2', '|', 'awk', 'BEGIN{ print \"Start\" } { print } END{ print \"End\" }']);\n    const res = await this.startChildProcessNoParams(\n      `git log --author=\"${params.author}\" --pretty=tformat: --numstat --since=${params.since} --until=${params.until} | awk 'BEGIN{ print \"Start\" } { add += $1; subs += $2; all += $1 + $2 } END{ print \"添加行: add \"add \" 移除行: remove \"subs \" 总计行: all \"all }'`,\n    );\n    return res;\n    // return \"testAwk\";\n    // 测试awk命令的执行\n    // echo -e \"A line 1\\nA line 2\" | awk 'BEGIN{ print \"Start\" } { print } END{ print \"End\" }'\n    // return execPromisify(`echo -e \"A line 1\\nA line 2\" | awk 'BEGIN{ print \"Start\" } { print } END{ print \"End\" }'`, { cwd: this.cwd });\n  }\n  async branch() {\n    try {\n      var params = ['branch', '-a'];\n      let result = await this.startChildProcess('git', params);\n      return result.toString();\n    } catch (err) {\n      console.error(err);\n    }\n\n    return false;\n  }\n  async allUser() {\n    // git log --pretty=format:\"%an <%ae>\"| sort -u\n    try {\n      const res = await this.startChildProcessNoParams(\n        `git log --pretty=format:\"%an <%ae>\"| sort -u`,\n      );\n      return res;\n    } catch (err) {\n      console.error(err);\n    }\n    return false;\n  }\n\n  async status() {\n    try {\n      var params = ['status', '-s'];\n      let result = await this.startChildProcess('git', params);\n      return result;\n    } catch (err) {\n      console.error(err);\n    }\n\n    return false;\n  }\n  startChildProcess(command: string, params: string[]): Promise<string> {\n    return new Promise((resolve, reject) => {\n      var process = spawn(command, params, {\n        cwd: this.cwd,\n        shell: true,\n      });\n\n      var logMessage = `${command} ${params[0]}`;\n      var cmdMessage = '';\n\n      process.stdout.on('data', (data) => {\n        console.log(`${logMessage} start ---`, data);\n        if (!data) {\n          reject(`${logMessage} error1 : ${data}`);\n        } else {\n          cmdMessage = data.toString();\n        }\n      });\n\n      process.on('close', (data) => {\n        console.log(`${logMessage} close ---`, data);\n        if (data) {\n          reject(`${logMessage} error2 ! ${data}`);\n        } else {\n          console.log(`${logMessage} success !`);\n          resolve(cmdMessage);\n        }\n      });\n    });\n  }\n  startChildProcessNoParams(command:string) {\n    return new Promise((resolve, reject) => {\n      var process = spawn(command, {\n        cwd: this.cwd,\n        shell: true,\n      });\n\n      var logMessage = `${command}`;\n      var cmdMessage = '';\n\n      process.stdout.on('data', (data) => {\n        console.log(`${logMessage} start ---`, data);\n        if (!data) {\n          reject(`${logMessage} error1 : ${data}`);\n        } else {\n          cmdMessage = data.toString();\n        }\n      });\n\n      process.on('close', (data) => {\n        console.log(`${logMessage} close ---`, data);\n        if (data) {\n          reject(`${logMessage} error2 ! ${data}`);\n        } else {\n          console.log(`${logMessage} success !`);\n          resolve(cmdMessage);\n        }\n      });\n    });\n  }\n}","import {\n  ExtensionContext,\n  commands,\n  window,\n  workspace,\n  ViewColumn,\n} from 'vscode';\nimport { GitTools } from './gitTools';\nimport TreeProvider from './treeData';\n\nconst git = new GitTools(workspace.workspaceFolders![0].uri.fsPath);\nexport function activate(context: ExtensionContext) {\n  window.createTreeView('gitcode-userlist', {\n    treeDataProvider: new TreeProvider(),\n  });\n  let disposable = commands.registerCommand(\n    'git-code-statistic.gitcode',\n    async function () {\n      // const git = new GitTools(__dirname);\n      // console.log(workspace.workspaceFolders[0].uri.fsPath, \"pathpath to git\")\n      getSelectedTextOrPrompt('输入作者').then(function (author) {\n        if (!author) {\n          return;\n        } else {\n          searchByDate(author as string);\n          /* getSelectedTextOrPrompt('输入开始时间').then(function (since) {\n            if (!since) {\n              return;\n            } else {\n              getSelectedTextOrPrompt('输入结束时间').then(function (until) {\n                if (!until) {\n                  return;\n                }\n                git\n                  .logMonth({\n                    author: author,\n                    since: since,\n                    until: until,\n                  })\n                  .then((result) => {\n                    console.log(result, 'git-code-statistic.gitcode');\n\n                    // 新创建一个页面，用了存放生成的数据 \n                    const panel = window.createWebviewPanel(\n                      'git-code-statistic', // 只供内部使用，这个 webview 的标识\n                      'git code statistic', // 给用户显示的面板标题\n                      ViewColumn.One, // 给新的 webview 面板一个编辑器视图\n                      {\n                        enableScripts: true, // 启用 javascript 脚本\n                        retainContextWhenHidden: true, // 隐藏时保留上下文\n                      } // webview 面板的内容配置\n                    );\n                    panel.webview.html = (result as string).slice(5);\n                    // 显示提示框\n                    // vscode.window.showInformationMessage(result);\n                  });\n              });\n            }\n          }); */\n        }\n      });\n    }\n  );\n\n  context.subscriptions.push(\n    disposable,\n    commands.registerCommand(`userList.add`, () => {\n      console.log(workspace!.workspaceFolders![0].uri.fsPath, 'add to git');\n    }),\n    commands.registerCommand(`userList.item.remove`, (user) => {\n      let userName = user.label.split(' ')[0];\n      console.log(user, 'remove removeremoveremove');\n      searchByDate(userName);\n    })\n  );\n}\n\nfunction searchByDate(userName: string) {\n  getSelectedTextOrPrompt('输入开始时间,如2020-01-31或2020/01/31').then(function (since) {\n    if (!since) {\n      return;\n    } else {\n      getSelectedTextOrPrompt('输入结束时间，如2080-01-31或2080/01/31').then(function (until) {\n        if (!until) {\n          return;\n        }\n        git\n          .logMonth({\n            author: userName,\n            since: since,\n            until: until,\n          })\n          .then((result) => {\n            console.log(result, 'git-code-statistic.gitcode');\n\n            /* 新创建一个页面，用了存放生成的数据 */\n            const panel = window.createWebviewPanel(\n              'git-code-statistic', // 只供内部使用，这个 webview 的标识\n              'git code statistic', // 给用户显示的面板标题\n              ViewColumn.One, // 给新的 webview 面板一个编辑器视图\n              {\n                enableScripts: true, // 启用 javascript 脚本\n                retainContextWhenHidden: true, // 隐藏时保留上下文\n              } // webview 面板的内容配置\n            );\n            panel.webview.html = (result as string).slice(5);\n            // 显示提示框\n            // vscode.window.showInformationMessage(result);\n          });\n      });\n    }\n  });\n}\n\n// 获取当前选中内容 或者 提示用户输入\nfunction getSelectedTextOrPrompt(prompt: string) {\n  return new Promise((resolve, reject) => {\n    const activeTextEditor = window.activeTextEditor;\n    if (activeTextEditor) {\n      const selection = activeTextEditor.selection,\n        start = selection.start,\n        end = selection.end;\n      console.log(activeTextEditor, 'selection');\n      if (start.line !== end.line || start.character !== end.character) {\n        return resolve(activeTextEditor.document.getText(selection));\n      }\n    }\n    return resolve(window.showInputBox({ prompt }));\n  });\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"child_process\");","import * as vscode from 'vscode';\nimport { GitTools } from './gitTools';\n\n// 创建一个类 TreeProvider，实现了 TreeDataProvider 接口\nexport default class TreeProvider\n  implements vscode.TreeDataProvider<vscode.TreeItem>\n{\n  // 创建一个事件发射器，用于通知树数据发生变化\n  private _onDidChangeTreeData: vscode.EventEmitter<\n    vscode.TreeItem | undefined\n  > = new vscode.EventEmitter<vscode.TreeItem | undefined>();\n  // 定义一个只读的事件，允许外部订阅树数据变化事件\n  readonly onDidChangeTreeData: vscode.Event<vscode.TreeItem | undefined> =\n    this._onDidChangeTreeData.event;\n\n  // 定义刷新方法，用于通知视图数据发生变化\n  refresh(): void {\n    this._onDidChangeTreeData.fire(undefined);\n  }\n\n  // 获取树中的单个项目，这里可以定义如何显示单个项目\n  getTreeItem(element: vscode.TreeItem): vscode.TreeItem {\n    return element;\n  }\n\n  // 获取树的子元素，可以是一个异步操作\n  getChildren(element?: vscode.TreeItem): Promise<vscode.TreeItem[]> {\n    // 在这里实现获取树的子元素的逻辑\n    // 可以返回一个 Promise 来异步获取子元素\n    // 如果没有子元素，可以返回一个空数组\n    // 在实际使用中，你需要根据你的插件逻辑来实现这个方法\n    return new Promise(async (resolve, reject) => {\n      const gitTool = new GitTools(vscode.workspace.workspaceFolders![0].uri.fsPath);\n      const userList: string = await gitTool.allUser() as string;\n      const result = userList.split(\"\\n\").filter(Boolean).map((item: string) => {\n        return new vscode.TreeItem(item, vscode.TreeItemCollapsibleState.None)\n      });\n      resolve(result)\n      // if (!element) {\n      //   resolve([\n      //     new vscode.TreeItem(\n      //       'Hello World!',\n      //       vscode.TreeItemCollapsibleState.Expanded\n      //     ),\n      //   ]);\n      // } else {\n      //   resolve([\n      //     new vscode.TreeItem(\n      //       'happy coding',\n      //       vscode.TreeItemCollapsibleState.None\n      //     ),\n      //   ]);\n      // }\n    });\n  }\n}\n"],"sourceRoot":""}